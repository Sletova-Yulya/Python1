# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.

# Насколько я поняла, я должна написать код, при котором бы мне не пришлось использовать уже встроенное исключение ValueError.
# Не совсем поняла, что означает фраза, что класс-исключение должен контролировать типы данных элементов списка.
# Все вводимые элементы имеют тип данных - str. Если там не цифры набраны, то уже при попытке преобразовать эти данные
# в любой другой тип, мы получим ошибку.
# Я написала код, в котором проверяется, что введенный элемент состоит только из цифр.
# Но в таком случае код не является универсальным, он отсекает отрицательные числа и так же выдаст сообщение об
# исключении, если в качестве стоп-слова использовать слово.
# Значит стоп-символом должно быть число и значит оно уже не сможет быть включено в список

class NotNumError(Exception):
    def __init__(self, txt):
        self.txt = txt

new_list = []
new_elem = 0
try:
    while new_elem != '100':
        new_elem = input('Введите новый элемент списка, для остановки ввода наберите 100: ')
        if new_elem != '100':
            new_list.append(new_elem)
        if new_elem.isdigit() == False:
            raise NotNumError("Вы ввели не число!")
except NotNumError as nnerr:
    print(nnerr)
else:
    print(f'Все прошло успешно, список сформирован: {new_list}')





